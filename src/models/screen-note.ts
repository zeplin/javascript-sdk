/* tslint:disable */
/* eslint-disable */
/**
 * Zeplin API
 * Access your resources in Zeplin
 *
 * Contact: support@zeplin.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import {
    ScreenNoteColor,
    transformScreenNoteColorToJSON,
    transformJSONToScreenNoteColor
} from './screen-note-color';
import {
    ScreenNoteComment,
    transformScreenNoteCommentToJSON,
    transformJSONToScreenNoteComment
} from './screen-note-comment';
import {
    ScreenNotePosition,
    transformScreenNotePositionToJSON,
    transformJSONToScreenNotePosition
} from './screen-note-position';
import {
    ScreenNoteStatusEnum,
    transformScreenNoteStatusEnumToJSON,
    transformJSONToScreenNoteStatusEnum
} from './screen-note-status-enum';
import {
    User,
    transformUserToJSON,
    transformJSONToUser
} from './user';


export const transformScreenNoteToJSON = function (value: ScreenNote): any {
    return {
        id: value.id,
        creator: transformUserToJSON(value.creator),
        order: value.order,
        status: transformScreenNoteStatusEnumToJSON(value.status),
        position: transformScreenNotePositionToJSON(value.position),
        color: transformScreenNoteColorToJSON(value.color),
        comments: value.comments.map(transformScreenNoteCommentToJSON),
        created: value.created
    }
}

export const transformJSONToScreenNote = function (value: any): ScreenNote {
    return {
        id: value.id,
        creator: transformJSONToUser(value.creator),
        order: value.order,
        status: transformJSONToScreenNoteStatusEnum(value.status),
        position: transformJSONToScreenNotePosition(value.position),
        color: transformJSONToScreenNoteColor(value.color),
        comments: value.comments.map(transformJSONToScreenNoteComment),
        created: value.created
    }
}

/**
 * Screen notes are comments added to a screen and can be either point notes, which have a single point in the position field, or area notes, which have a position field containing both a start and end point to define a rectangular region. 
 * @export
 * @interface ScreenNote
 */
export interface ScreenNote {
    /**
     * The unique id of the note
     * @type {string}
     * @memberof ScreenNote
     */
    id: string;
    /**
     * 
     * @type {User}
     * @memberof ScreenNote
     */
    creator: User;
    /**
     * Order of the note in the screen (e.g., 1, 2, 3, so on)
     * @type {number}
     * @memberof ScreenNote
     */
    order: number;
    /**
     * 
     * @type {ScreenNoteStatusEnum}
     * @memberof ScreenNote
     */
    status: ScreenNoteStatusEnum;
    /**
     * 
     * @type {ScreenNotePosition}
     * @memberof ScreenNote
     */
    position: ScreenNotePosition;
    /**
     * 
     * @type {ScreenNoteColor}
     * @memberof ScreenNote
     */
    color: ScreenNoteColor;
    /**
     * 
     * @type {Array<ScreenNoteComment>}
     * @memberof ScreenNote
     */
    comments: Array<ScreenNoteComment>;
    /**
     * The unix timestamp when the note was created
     * @type {number}
     * @memberof ScreenNote
     */
    created: number;
}


